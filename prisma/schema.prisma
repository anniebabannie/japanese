generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Lesson {
  id            String          @id @default(cuid())
  title         String
  description   String
  level         JLPTLevel
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  story         String          @default("Story content will be generated for new lessons.")
  grammarPoints GrammarPoint[]
  questions     Question[]
  vocabulary    Vocabulary[]
  vocabularySRS VocabularySRS[]
}

model GrammarPoint {
  id          String   @id @default(cuid())
  lessonId    String
  point       String
  explanation String
  examples    String[]
  order       Int
  lesson      Lesson   @relation(fields: [lessonId], references: [id], onDelete: Cascade)
}

model Vocabulary {
  id              String          @id @default(cuid())
  lessonId        String
  word            String
  reading         String?
  meaning         String
  originalForm    String?
  conjugationInfo String?
  order           Int
  lesson          Lesson          @relation(fields: [lessonId], references: [id], onDelete: Cascade)
  srsRecords      VocabularySRS[]
}

model Question {
  id          String       @id @default(cuid())
  lessonId    String
  question    String
  answer      String
  options     String[]
  type        QuestionType
  explanation String?
  order       Int
  lesson      Lesson       @relation(fields: [lessonId], references: [id], onDelete: Cascade)
}

model VocabularySRS {
  id           String     @id @default(cuid())
  userId       String
  vocabularyId String
  lessonId     String
  repetition   Int        @default(0)
  easiness     Float      @default(2.5)
  interval     Int        @default(0)
  nextReview   DateTime   @default(now())
  readingQuality Int?     // Quality rating for reading skill (0-3)
  meaningQuality Int?     // Quality rating for meaning skill (0-3)
  totalReviews Int        @default(0)
  lastReviewed DateTime?
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  lesson       Lesson     @relation(fields: [lessonId], references: [id], onDelete: Cascade)
  vocabulary   Vocabulary @relation(fields: [vocabularyId], references: [id], onDelete: Cascade)

  @@unique([userId, vocabularyId])
  @@index([userId, nextReview])
}

enum JLPTLevel {
  N5
  N4
  N3
  N2
  N1
}

enum QuestionType {
  MULTIPLE_CHOICE
  FILL_IN_BLANK
  TRANSLATION
}
